services:
  postgres:
    container_name: postgres
    image: 'postgis/postgis:15-3.3'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=bayanat_test
    volumes:
      - 'postgres_test_data:/var/lib/postgresql/data:rw'
    expose:
      - '5432'
    read_only: true
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /var/run/postgresql
    healthcheck:
      test: "pg_isready -d bayanat_test -U ${POSTGRES_USER}"
      interval: 3s
      retries: 10

  redis:
    container_name: redis
    image: 'redis:latest'
    expose:
      - '6379'
    command: redis-server --requirepass '${REDIS_PASSWORD}'
    read_only: true
    security_opt:
      - no-new-privileges:true
    volumes:
      - 'redis_test_data:/var/lib/redis/data:rw'
    healthcheck:
      test: [ "CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 3s
      retries: 10

  bayanat:
    container_name: bayanat
    build:
      context: .
      dockerfile: ./flask/Dockerfile.test
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '127.0.0.1:5000:5000'
    volumes:
      - '${PWD}/reload.ini:/app/reload.ini:rw'
      - '${PWD}/${ENV_FILE:-.env.test}:/app/.env:ro'
      - 'bayanat_test_media:/app/enferno/media:rw'
      - 'bayanat_test_imports:/app/tests/imports:rw'
      - 'bayanat_test_logs:/app/logs:rw'
    command: [ "pytest" ]

volumes:
  redis_test_data:
  postgres_test_data:
  bayanat_test_media:
  bayanat_test_imports:
  bayanat_test_logs: